"use client";
import { useSearchParams } from 'next/navigation';

export const MESSAGES = {
  en: {
    title: "OpenSiteTrust · Website trust score",
    inputHelp: "Enter a domain or paste a full URL; we'll extract the domain.",
    placeholder: "example.com or https://example.com/v1/health",
    view: "View",
    examples: "Examples",
    apiDocs: "API Docs",
    apiHealth: "API Health",
    site: "Site",
    updatedAt: "Updated at",
    security: "S (Security)",
    credibility: "C (Credibility)",
    transparency: "T (Transparency)",
    community: "U (Community)",
    noVotes: "0 (No ratings, not included)",
    communityVote: "Community vote",
    label: "Label",
    reason: "Reason (optional)",
    submit: "Submit vote",
    submitting: "Submitting…",
    safe: "safe",
    suspicious: "suspicious",
    danger: "danger",
    gsbAlert: "Google Safe Browsing flags this site as risky (3rd-party).",
  invalidInput: "Please enter a valid domain or URL.",
  },
  zh: {
    title: "OpenSiteTrust · 网站可信度评分",
    inputHelp: "输入域名或粘贴完整 URL，我们会自动提取域名。",
    placeholder: "example.com 或 https://example.com/v1/health",
    view: "查看",
    examples: "示例",
    apiDocs: "API 文档",
    apiHealth: "健康检查",
    site: "站点",
    updatedAt: "更新于",
    security: "S（安全）",
    credibility: "C（可信）",
    transparency: "T（透明）",
    community: "U（社区）",
    noVotes: "0（暂无评价，不计入总分）",
    communityVote: "社区投票",
    label: "标签",
    reason: "理由（可选）",
    submit: "提交投票",
    submitting: "提交中…",
    safe: "安全",
    suspicious: "可疑",
    danger: "危险",
    gsbAlert: "Google 安全浏览标记此站点存在风险（第三方）。",
  invalidInput: "请输入有效的域名或 URL。",
  },
  'zh-Hant': {
    title: "OpenSiteTrust · 網站可信度評分",
    inputHelp: "輸入網域或貼上完整 URL，我們會自動擷取網域。",
    placeholder: "example.com 或 https://example.com/v1/health",
    view: "檢視",
    examples: "範例",
    apiDocs: "API 文件",
    apiHealth: "健康檢查",
    site: "網站",
    updatedAt: "更新於",
    security: "S（安全）",
    credibility: "C（可信度）",
    transparency: "T（透明）",
    community: "U（社群）",
    noVotes: "0（尚無評價，不納入總分）",
    communityVote: "社群投票",
    label: "標籤",
    reason: "理由（選填）",
    submit: "送出投票",
    submitting: "送出中…",
    safe: "安全",
    suspicious: "可疑",
    danger: "危險",
  gsbAlert: "Google 安全瀏覽標記此網站存在風險（第三方）。",
  invalidInput: "請輸入有效的網域或 URL。",
  },
  ja: {
    title: "OpenSiteTrust · Webサイト信頼スコア",
    inputHelp: "ドメインまたはURLを入力してください。ドメインを自動抽出します。",
    placeholder: "example.com または https://example.com/v1/health",
    view: "表示",
    examples: "例",
    apiDocs: "API ドキュメント",
    apiHealth: "ヘルス",
    site: "サイト",
    updatedAt: "更新日時",
    security: "S（セキュリティ）",
    credibility: "C（信頼性）",
    transparency: "T（透明性）",
    community: "U（コミュニティ）",
    noVotes: "0（評価なし、集計対象外）",
    communityVote: "コミュニティ投票",
    label: "ラベル",
    reason: "理由（任意）",
    submit: "投票する",
    submitting: "送信中…",
    safe: "安全",
    suspicious: "疑わしい",
    danger: "危険",
  gsbAlert: "Google Safe Browsing によりリスクありと判定（外部）。",
  invalidInput: "有効なドメインまたはURLを入力してください。",
  },
  es: {
    title: "OpenSiteTrust · Puntaje de confianza del sitio web",
    inputHelp: "Ingresa un dominio o pega una URL completa; extraeremos el dominio.",
    placeholder: "example.com o https://example.com/v1/health",
    view: "Ver",
    examples: "Ejemplos",
    apiDocs: "Docs de API",
    apiHealth: "Salud",
    site: "Sitio",
    updatedAt: "Actualizado",
    security: "S (Seguridad)",
    credibility: "C (Credibilidad)",
    transparency: "T (Transparencia)",
    community: "U (Comunidad)",
    noVotes: "0 (Sin votos, no incluido)",
    communityVote: "Voto de la comunidad",
    label: "Etiqueta",
    reason: "Motivo (opcional)",
    submit: "Enviar voto",
    submitting: "Enviando…",
    safe: "seguro",
    suspicious: "sospechoso",
    danger: "peligroso",
  gsbAlert: "Google Safe Browsing marca este sitio como riesgoso (tercero).",
  invalidInput: "Introduce un dominio o URL válido.",
  }
};

export function useLang() {
  const sp = useSearchParams();
  const lang = sp.get('lang') || 'en';
  return (lang in MESSAGES ? lang : 'en');
}

export function t(key, lang) {
  const l = lang && MESSAGES[lang] ? lang : 'en';
  return MESSAGES[l][key] ?? MESSAGES['en'][key] ?? key;
}
