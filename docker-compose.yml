services:
  api:
    build: ./apps/api
    environment:
      DATABASE_URL: postgres://user:pass@db:5432/site
      REDIS_URL: redis://redis:6379
      JWT_SECRET: changeme
      GOOGLE_SAFE_BROWSING_API_KEY: "${GOOGLE_SAFE_BROWSING_API_KEY:-}"
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
  web:
    build: ./apps/web
    environment:
      NEXT_PUBLIC_VERSION: "${NEXT_PUBLIC_VERSION:-v0.11}"
    expose: ["3000"]
  worker:
    build: ./apps/api
    command: python worker.py
    environment:
      DATABASE_URL: postgres://user:pass@db:5432/site
      REDIS_URL: redis://redis:6379
      GOOGLE_SAFE_BROWSING_API_KEY: "${GOOGLE_SAFE_BROWSING_API_KEY:-}"
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: site
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d site || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
  redis:
    image: redis:7
  caddy:
    image: caddy:2-alpine
    depends_on: [api, web]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
volumes:
  pgdata: {}
  caddy_data: {}
  caddy_config: {}
